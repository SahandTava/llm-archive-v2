name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          backend/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Format check
      run: cd backend && cargo fmt -- --check
    
    - name: Clippy
      run: cd backend && cargo clippy -- -D warnings
    
    - name: Run tests
      run: cd backend && cargo test --all-features
    
    - name: Performance benchmark
      run: cd backend && cargo test --release -- --nocapture performance

  frontend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: cd frontend && npm ci
    
    - name: Type check
      run: cd frontend && npm run check
    
    - name: Build
      run: cd frontend && npm run build
    
    - name: Unit tests
      run: cd frontend && npm test

  e2e-test:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Install Playwright
      run: cd frontend && npm ci && npx playwright install --with-deps
    
    - name: Build backend
      run: cd backend && cargo build --release
    
    - name: Build frontend
      run: cd frontend && npm run build
    
    - name: Run E2E tests
      run: |
        cd backend && ./target/release/llm-archive-v2 &
        BACKEND_PID=$!
        sleep 2
        cd ../frontend && npm run preview &
        FRONTEND_PID=$!
        sleep 2
        npm run test:e2e
        kill $BACKEND_PID $FRONTEND_PID